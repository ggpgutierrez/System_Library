/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controlador.ControladorEmprestimo;
import Controlador.ControladorLogin;
import Model.Emprestimo;
import Model.Pessoa;
import Utilitarios.Mensagem;
import java.awt.Dimension;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriel
 */
public class TelaEmprestimo extends javax.swing.JInternalFrame {

    /**
     * Creates new form Emprestimo
     */
    public TelaEmprestimo() {
        initComponents();

        jtfDataEmprestimo.enable(false);
        jtfDevolucao.enable(false);
       jtfDataEmprestimo.setText(sdf.format(c.getTime()));
       c.add(Calendar.DAY_OF_MONTH,6);
       jtfDevolucao.setText(sdf.format(c.getTime()));
    }

    public void setposicao() {

        //pega a posição do internal e centraliza
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfDocumento = new javax.swing.JTextField();
        jtfItem = new javax.swing.JTextField();
        jtfDataEmprestimo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbuPesquisa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbPessoa = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbuEmprestar = new javax.swing.JButton();
        jbuPesquisaItem = new javax.swing.JButton();
        jtfDevolucao = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 153, 153));
        setClosable(true);
        setTitle("Empréstimo");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/img/book.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jtfItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfItemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfItemKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Elephant", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("RA/RF");

        jLabel2.setFont(new java.awt.Font("Elephant", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Código Item");

        jLabel3.setFont(new java.awt.Font("Elephant", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Data empréstimo");

        jLabel4.setFont(new java.awt.Font("Elephant", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Data devolução");

        jbuPesquisa.setText("Pesquisar");
        jbuPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuPesquisaActionPerformed(evt);
            }
        });

        jtbPessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "CÓDIGO", "NOME", "DOCUMENTO", "STATUS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtbPessoa);
        if (jtbPessoa.getColumnModel().getColumnCount() > 0) {
            jtbPessoa.getColumnModel().getColumn(0).setResizable(false);
            jtbPessoa.getColumnModel().getColumn(1).setResizable(false);
            jtbPessoa.getColumnModel().getColumn(2).setResizable(false);
            jtbPessoa.getColumnModel().getColumn(3).setResizable(false);
        }

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "CÓDIGO", "CODIGO EXTERNO", "NOME", "TIPO", "GÊNERO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        jbuEmprestar.setText("Emprestar");
        jbuEmprestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuEmprestarActionPerformed(evt);
            }
        });

        jbuPesquisaItem.setText("Pesquisar");
        jbuPesquisaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuPesquisaItemActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jSeparator1)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(layout.createSequentialGroup()
                                        .add(13, 13, 13)
                                        .add(jLabel1)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jtfDocumento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .add(jLabel2)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jtfItem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jLabel3)
                                            .add(jLabel4))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(jtfDevolucao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jtfDataEmprestimo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 144, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jbuPesquisa)
                                    .add(jbuPesquisaItem))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 42, Short.MAX_VALUE)
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(198, 198, 198)
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createSequentialGroup()
                                .add(347, 347, 347)
                                .add(jbuEmprestar)))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(52, 52, 52)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel1)
                            .add(jtfDocumento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jbuPesquisa)))
                    .add(layout.createSequentialGroup()
                        .add(38, 38, 38)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jtfItem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jbuPesquisaItem))
                .add(44, 44, 44)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jtfDataEmprestimo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(jtfDevolucao, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(50, 50, 50)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 47, Short.MAX_VALUE)
                .add(jbuEmprestar)
                .add(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbuPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuPesquisaActionPerformed
        // TODO add your handling code here:
        String Status = "";

        if ("".equals(jtfDocumento.getText())) {
            Mensagem.exibirMensagem("Preencha o campo do RG");
        } else {
            try {
                String documento = jtfDocumento.getText();
                emprestimo.obterPesquisa(jtbPessoa, documento);
                Status = jtbPessoa.getValueAt(0, 3).toString();
                if ("Inativo".equals(Status)) {
                    jbuEmprestar.setEnabled(false);
                    Mensagem.exibirMensagem("Usuário inativo, não é possível realizar empréstimos");
                } else {
                    jbuEmprestar.setEnabled(true);
                }
            } catch (SQLException ex) {
                Logger.getLogger(TelaCadastroLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jbuPesquisaActionPerformed

    private void jtfItemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfItemKeyPressed

    }//GEN-LAST:event_jtfItemKeyPressed

    private void jtfItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfItemKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jtfItemKeyReleased

    private void jbuEmprestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuEmprestarActionPerformed
        // TODO add your handling code here:
        String cod_item, cod_pessoa = "";

        if ("".equals(jtfDocumento.getText()) || ("".equals(jtfItem.getText()))) {
            Mensagem.exibirMensagem("Preencha todos os campos!");
        } else {
            cod_item = jTable1.getValueAt(0, 0).toString();
            cod_pessoa = jtbPessoa.getValueAt(0, 0).toString();

            emp.setCodPessoa(cod_pessoa);
            emp.setCodItem(cod_item);
            emp.setDevolucao(jtfDevolucao.getText());
            emp.setDataEmprestimo(jtfDataEmprestimo.getText());

            emp.setEntregaEfetiva(false);

            try {
                emprestimo.Adiciona(emp);
                this.dispose();

            } catch (SQLException ex) {
                Mensagem.exibirMensagem("Erro ao adicionar" + ex);
            }
        }
    }//GEN-LAST:event_jbuEmprestarActionPerformed

    private void jbuPesquisaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuPesquisaItemActionPerformed
        // TODO add your handling code here:
        boolean verificar = true;
        String documento = jtfDocumento.getText();
        if ("".equals(jtfItem.getText())) {
            Mensagem.exibirMensagem("Preencha o campo do ITEM");
        } else {
            String cod = jtfItem.getText();
            try {
                emprestimo.obterPesquisaItem(jTable1, cod);
                verificar = emprestimo.verificarItem(cod, verificar);

            } catch (SQLException ex) {
                Mensagem.exibirMensagem("Impossível realizar pesquisa" + ex);
            }
            if (verificar == false) {
                Mensagem.exibirMensagem("Livro indisponivel para empréstimo");
                jbuEmprestar.setEnabled(verificar);
            } else {
                jbuEmprestar.setEnabled(verificar);
            }

        }

    }//GEN-LAST:event_jbuPesquisaItemActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        TelaPrincipal.Emprestimo = true;
    }//GEN-LAST:event_formInternalFrameOpened

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:

        this.setDefaultCloseOperation(TelaEmprestimo.DO_NOTHING_ON_CLOSE);
        if (Mensagem.exibirConfirm() == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        TelaPrincipal.Emprestimo = false;
    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbuEmprestar;
    private javax.swing.JButton jbuPesquisa;
    private javax.swing.JButton jbuPesquisaItem;
    private javax.swing.JTable jtbPessoa;
    private javax.swing.JTextField jtfDataEmprestimo;
    private javax.swing.JTextField jtfDevolucao;
    private javax.swing.JTextField jtfDocumento;
    private javax.swing.JTextField jtfItem;
    // End of variables declaration//GEN-END:variables
ControladorEmprestimo emprestimo = new ControladorEmprestimo();
    Pessoa pessoa = new Pessoa();
    ControladorLogin replog = new ControladorLogin();
    Calendar c = Calendar.getInstance();
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    Emprestimo emp = new Emprestimo();

}
